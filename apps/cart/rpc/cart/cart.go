// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: cart.proto

package cart

import (
	"context"

	"go_mall/apps/cart/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddReq     = __.AddReq
	AddResp    = __.AddResp
	CartItem   = __.CartItem
	ListReq    = __.ListReq
	ListResp   = __.ListResp
	RemoveReq  = __.RemoveReq
	RemoveResp = __.RemoveResp
	UpdateReq  = __.UpdateReq
	UpdateResp = __.UpdateResp

	Cart interface {
		Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error)
		Remove(ctx context.Context, in *RemoveReq, opts ...grpc.CallOption) (*RemoveResp, error)
		List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
		Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
	}

	defaultCart struct {
		cli zrpc.Client
	}
)

func NewCart(cli zrpc.Client) Cart {
	return &defaultCart{
		cli: cli,
	}
}

func (m *defaultCart) Add(ctx context.Context, in *AddReq, opts ...grpc.CallOption) (*AddResp, error) {
	client := __.NewCartClient(m.cli.Conn())
	return client.Add(ctx, in, opts...)
}

func (m *defaultCart) Remove(ctx context.Context, in *RemoveReq, opts ...grpc.CallOption) (*RemoveResp, error) {
	client := __.NewCartClient(m.cli.Conn())
	return client.Remove(ctx, in, opts...)
}

func (m *defaultCart) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	client := __.NewCartClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}

func (m *defaultCart) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	client := __.NewCartClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}
